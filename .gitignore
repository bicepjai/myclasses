

# 2017 classes =================================================
2017/cs20si/data/text8
2017/cs20si/data/MNIST_data/
2017/cs20si/data/MNIST_data/
2017/cs20si/data/notMNIST-to-MNIST/
2017/cs20si/assignments/style_transfer/outputs/
2017/cs20si/assignments/style_transfer/checkpoints/
2017/cs20si/assignments/style_transfer/graphs/
2017/cs20si/assignments/style_transfer/content/
2017/cs20si/assignments/style_transfer/styles/

2017/cs224n/assignment1/utils/datasets/stanfordSentimentTreebank/
2017/cs224n/assignment1/utils/datasets/glove.6B*
2017/cs224n/assignment1/q4_*.png
2017/cs224n/assignment1/q4_*.txt

2017/udacity-ml/*/data

2017/homlwsltf/
2017/educator-statistics/

2017/educator-statistics/

# 2016 classes ============================================================
2016/audit/

# 2015 classes ============================================================
2015/audit/
2015/calcsing_007/


# custom ============================================================
lectures/

*.zip
*.pdf
*.tsv
*.npz
*.mat
*.Rdata
*.RData
*.mp4
*.mp3
*.m4a
*.wav
# R ============================================================
# History files
.Rhistory
.Rapp.history

# Session Data files
.RData

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf

# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3
.httr-oauth

# knitr and R markdown default cache directories
/*_cache/
/cache/

# Temporary files created by R markdown
*.utf8.md
*.knit.md

# c++ ============================================================
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# c ============================================================
# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
modules.order
Module.symvers
Mkfile.old
dkms.conf

# python ============================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env

# virtualenv
.venv/
venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject

*.npy

# java ============================================================
*.class

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

# scala ============================================================
*.class
*.log

# sbt specific
.cache
.history
.lib/
dist/*
target/
lib_managed/
src_managed/
project/boot/
project/plugins/project/

# Scala-IDE specific
.scala_dependencies
.worksheet

# ENSIME specific
.ensime_cache/
.ensime

# R ============================================================
# History files
.Rhistory
.Rapp.history

# Session Data files
.RData

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf

# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3
.httr-oauth

# knitr and R markdown default cache directories
/*_cache/
/cache/

# Temporary files created by R markdown
*.utf8.md
*.knit.md

# obj-c ============================================================
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xcuserstate

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Gitignore.md

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# swift ============================================================
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xcuserstate

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Gitignore.md

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output

# R ============================================================
# History files
.Rhistory
.Rapp.history

# Session Data files
.RData

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf

# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3
.httr-oauth

# knitr and R markdown default cache directories
/*_cache/
/cache/

# Temporary files created by R markdown
*.utf8.md
*.knit.md

# ides ============================================================
# Eclipse
.classpath
.project
.settings/

# Intellij
.idea/
*.iml
*.iws

# Mac
.DS_Store

# Maven
log/
target/

# octocat ============================================================
# https://gist.github.com/octocat/9257657

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages ============================================================
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases ============================================================
*.log
*.sql
*.sqlite

# OS generated files ============================================================
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# virtualbox files  ============================================================
*.ova

# ROS  ============================================================
.pydevproject
cmake_install.cmake

build/
bin/
lib/
msg_gen/
srv_gen/
msg/*Action.msg
msg/*ActionFeedback.msg
msg/*ActionGoal.msg
msg/*ActionResult.msg
msg/*Feedback.msg
msg/*Goal.msg
msg/*Result.msg
msg/_*.py

# Generated by dynamic reconfigure
*.cfgc
/cfg/cpp/
/cfg/*.py

# Ignore generated docs
*.dox
*.wikidoc

# eclipse stuff
.project
.cproject

# qcreator stuff
CMakeLists.txt.user

srv/_*.py
*.pcd
*.pyc
qtcreator-*
*.user

/planning/cfg
/planning/docs
/planning/src

*~

# Emacs
.#*

# Catkin custom files
CATKIN_IGNORE

# Lines that start with '#' are comments.
# ignore objects and libraries
*.o
*.a
*.d
*.so
*.lo
*.la
# ignore python compiled files:
*.pyc
# ignore gcov files
*.gcda
*.gcno
*.gcov
# ignore tag files
tags
# we don't care about vi swp files
*.swp
# we also don't care about emacs swap files
*~
.backup-*
# nothing in the root directory should be checked in.
root
# setup.bash is a generated file.
setup.bash
config.mk
# gcov files
*.gcno
*.gcov
# Testing output files
*.out
.build-version
.rospack_cache
*.tar.gz
3rdparty/cmake/build
3rdparty/cmake/cmake
3rdparty/cmake/cmake-2.6.0
3rdparty/numpy/build
3rdparty/numpy/numpy
3rdparty/numpy/src
3rdparty/tinyxml/build
3rdparty/xmlrpc++/build
bin/rosinstall
bin/roslaunch
bin/rosmap
bin/rosmaster
bin/rospack
bin/rosplay
bin/rosprereq
bin/rosrecord
bin/rostest
bin/svnmerge
core/experimental/roslisp/build
core/experimental/roslisp/lib
core/genmsg_cpp/build
core/genmsg_cpp/genmsg
core/genmsg_cpp/genmsg_lisp
core/genmsg_cpp/genmsgtest
core/genmsg_cpp/gensrv
core/genmsg_cpp/gensrv_lisp
core/genmsg_cpp/submsgs
core/rosconsole/build
core/rosconsole/examples/example
core/roscpp/build
core/roscpp/msg/cpp
core/roscpp/msg/lisp
core/roscpp/src/roscpp
core/roscpp/srv/cpp
core/roscpp/srv/lisp
core/rosout/build
core/rosout/rosout
core/rospack_test/build
core/rospy/build
core/rostime/build
core/rostools/build
core/rostools/msg/cpp
core/rostools/msg/lisp
core/rostools/src/rostools/msg
core/roslib/build
core/roslib/msg/cpp
core/roslib/msg/lisp
core/roslib/src/rostools/msg
demos/roscpp_demo/bin
demos/roscpp_demo/build
demos/rospy_demo/build
demos/rospy_demo/msg/cpp
demos/rospy_demo/msg/lisp
demos/rospy_demo/src/rospy_demo/msg
param/rosparam/build
param/shparam/build
param/shparam/shparam
param/xmlparam/build
param/xmlparam/xmlparam
std_msgs/build
std_msgs/msg/cpp
std_msgs/msg/lisp
std_msgs/src
std_srvs/build
std_srvs/src
std_srvs/srv/cpp
std_srvs/srv/lisp
test/gtest/build
test/gtest/gtest
test/gtest/gtest-1.0.1
test/param_setget/depend
test/param_setget/param_setget
test/performance/roscpp_msg_serdes/build
test/performance/roscpp_msg_serdes/pointcloud_serdes
test/rostest/build
test/test_ros/build
test/test_roscpp/bin
test/test_roscpp/build
test/test_roslaunch/build
test/test_ros/msg/cpp
test/test_ros/msg/lisp
test/test_rospy/build
test/test_rospy/msg/cpp
test/test_rospy/msg/lisp
test/test_rospy/src/test_rospy/msg
test/test_rospy/src/test_rospy/srv
test/test_rospy/srv/cpp
test/test_rospy/srv/lisp
test/test_ros/src/test_ros/msg
tools/rosinstall/build
tools/rosinstall/rosinstall
tools/roslaunch/build
tools/rosmap/depend
tools/rospack/depend
tools/rosprereq/depend
tools/rosrecord/bin
tools/rosrecord/build
tools/vizdeps/deps.gv
tools/vizdeps/deps.pdf
tutorials/roscpp_tutorials/bin
tutorials/roscpp_tutorials/build
tutorials/roscpp_tutorials/src
tutorials/roscpp_tutorials/srv/cpp
tutorials/roscpp_tutorials/srv/lisp
tutorials/rospy_tutorials/build
tutorials/rospy_tutorials/src
tutorials/rospy_tutorials/srv/cpp
tutorials/rospy_tutorials/srv/lisp
util/rosthread/build
.build_version
.rosgcov_files
3rdparty/gtest/gtest
/core/genmsg_cpp/genmsg_java
/core/genmsg_cpp/genmsg_oct
/core/genmsg_cpp/gensrv_java
/core/genmsg_cpp/gensrv_oct
/core/roslib/src/roslib
